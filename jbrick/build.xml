<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project default="create_jar" name="Create Runnable Jar for Project jbrick with Eclipse's Jar-in-Jar Loader">
  <!--this file was [once] created by Eclipse Runnable JAR Export Wizard-->
  <!--ANT 1.7 is required (or so we believe)                            -->

  <!-- Properties used throughout the script -->
  <property name="workDir" value="${basedir}/target" />
  <property name="libsDir" value="${basedir}/lib" />
  <property name="srcDir" value="${basedir}/src" />
  <property name="testSrcDir" value="${basedir}/tests" />
  <property name="testDir" value="${workDir}/tests" />
  <property name="configDirDest" value="${workDir}/config" />
  <property name="configDirSrc" value="${basedir}/resources/config" />
  <property name="imageDirDest" value="${workDir}/images/" />
  <property name="imageDirSrc" value="${basedir}/resources/images/" />
  <property name="javaVersion" value="1.6" />

  <!-- A couple of things to do before compiling. -->
  <target name="prepare">
    <delete dir="${workDir}" />
    <mkdir dir="${workDir}"/>

    <!-- Copy the configuration files. -->
    <copy todir="${configDirDest}">
      <fileset dir="${configDirSrc}">
        <include name="**/*.xml" />
      </fileset>
    </copy>

    <!-- Copy the image files. -->
    <copy todir="${imageDirDest}">
      <fileset dir="${imageDirSrc}">
        <include name="**/*.*" />
      </fileset>
    </copy>
  </target>

  <!-- Compiles the source code, no Eclipse required -->
  <target name="compile" depends="prepare">
    <javac target="${javaVersion}" source="${javaVersion}" destdir="${workDir}" classpath="${libsDir}">
      <src path="${srcDir}" />
      <classpath>
        <fileset dir="${libsDir}">
          <include name="**/*.jar"/>
        </fileset>
      </classpath>
    </javac>
  </target>
	

  <!-- Compile the tests from the specified directory -->
  <target name="compile-test" depends="compile">
    <delete dir="${testDir}" />
    <mkdir  dir="${testDir}" />
    <copy todir="${testDir}">
      <fileset dir="${workDir}">
        <include name="**/*.class" />
      </fileset>
    </copy>
    <javac target="${javaVersion}" source="${javaVersion}" destdir="${testDir}" classpath="${libsDir}">
      <src path="${testSrcDir}" />
      <classpath>
        <fileset dir="${libsDir}">
          <include name="**/*.jar"/>
        </fileset>
      </classpath>
    </javac>
  </target>

  <!-- The application is packaged even if one of the tests fail -->
  <target name="test" depends="compile-test">
    <junit printsummary="false" fork="false" haltonfailure="false">
      <classpath> 
        <pathelement path="${testDir}"/>
        <fileset dir="${libsDir}">
          <include name="**/*.jar" />
        </fileset>
      </classpath>
      <formatter type="brief" usefile="false" />
      <batchtest todir="${testDir}">
        <fileset dir="${testSrcDir}">
          <include name="**/*Test*.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <!-- Create the runnable JAR file -->
  <target name="create_jar" depends="compile">
    <!-- Delete the tests directory to avoid its inclusion in the JAR -->
    <delete dir="${testDir}" />

    <tstamp>
      <!-- The format for the JAR file. -->
      <format property="archive.name" pattern="'jbrick-'yyyyMMdd'.jar'" />
    </tstamp>

    <!-- We haven't run this on a non-Windows machine.
    Check for the property ${os.name} and modify the script in order to create
    different versions of the JAR, assuming the libraries are different.
    -->
    <jar destfile="${basedir}/${archive.name}">
      <manifest>
        <attribute name="Main-Class" value="org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader" />
        <attribute name="Rsrc-Main-Class" value="com.jbricx.swing.main.JBricxLauncher" />
        <attribute name="Class-Path" value="." />
        <attribute name="Rsrc-Class-Path" value="./ jna.jar" />
      </manifest>

      <fileset dir="${workDir}" />
      <zipfileset src="jar-in-jar-loader.zip" />
      <zipfileset dir="${libsDir}" includes="jna.jar" />
      <zipfileset dir="${libsDir}" includes="nbc.exe" />	
    </jar>

    <!-- Delete the temporary directory -->
    <delete dir="${workDir}" />
  </target>
</project>
